#
# Proxy config for containerd services
#

# configure an upstream for proxying to the service with keepalive
upstream {{ service }}_backend {
    zone upstreams 64k;
    server 127.0.0.1:{{ containerd["services_conf"][service]["port"] }} max_fails=1 fail_timeout=5s;
    keepalive 2;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name {{ containerd["services_conf"][service]["domain"] }};

    # Send a permanent redirect to the HTTPS port
    location / {
        return 301 https://$host$request_uri;
    }
}

# TLS config for {{ service }}
# https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=modern&openssl=1.1.1k&hsts=false&ocsp=false&guideline=5.7
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name         {{ containerd["services_conf"][service]["domain"] }};

    ssl_certificate     {{ containerd.cert_dir }}/{{ containerd["services_conf"][service]["domain"] }}.crt;
    ssl_certificate_key {{ containerd.cert_dir }}/{{ containerd["services_conf"][service]["domain"] }}.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols       TLSv1.3;
    ssl_prefer_server_ciphers off;

    location / {
        # Proxy to service port
        #proxy_pass http://127.0.0.1:{{ containerd["services_conf"][service]["port"] }}/;
        {%- if "backend_https" in containerd["services_conf"][service] and containerd["services_conf"][service]["backend_https"] %} 
        proxy_pass https://{{ service }}_backend/;
        {%- else %}
        proxy_pass http://{{ service }}_backend/;
        {%- endif %}

        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;

        proxy_http_version 1.1;

        client_max_body_size 0;
    }
}